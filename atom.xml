<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Lester Zhao's Blog]]></title>
  <link href="http://lester.izstudy.com//atom.xml" rel="self"/>
  <link href="http://lester.izstudy.com//"/>
  <updated>2013-10-21T13:58:53+08:00</updated>
  <id>http://lester.izstudy.com//</id>
  <author>
    <name><![CDATA[Lester Zhao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[TextMate 2 下 Ctag 和 Git Bundle 同时工作]]></title>
    <link href="http://lester.izstudy.com//blog/2013/10/21/ctag-and-git-bundles-of-textmate-2-both-work-fine-at-the-same-time/"/>
    <updated>2013-10-21T00:20:00+08:00</updated>
    <id>http://lester.izstudy.com//blog/2013/10/21/ctag-and-git-bundles-of-textmate-2-both-work-fine-at-the-same-time</id>
    <content type="html"><![CDATA[<p>最近再使用 TextMate 2 的 Bundle：Ctag 和 Git 的时候经过了一番周折才勉强可以让这两个 Bundle 同时工作。写出来帮助遇到同样问题的朋友。避免浪费时间。</p>

<p>问题现象：</p>

<p>使用 TM2、 ruby 1.9.3 或 ruby 2.0.1</p>

<p>Git Bundle 可以正常工作。</p>

<p>安装 TM Ctag Bundle 之后 ^ + Command + P 报异常大概如下:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="n">ui</span><span class="o">.</span><span class="n">rb</span><span class="p">:</span><span class="mi">308</span><span class="p">:</span> <span class="k">in</span> <span class="sb">`to_plist&#39;: An object in the argument tree could not be converted (ArgumentError)</span>
</span><span class='line'><span class="sb">     from ～/Library/Application Support/TextMate/Managed/Bundles/Bundle Support.tmbundle/Support/shared/lib/ui.rb:308:in `</span><span class="n">block</span> <span class="k">in</span> <span class="kp">initialize</span><span class="s1">&#39;</span>
</span><span class='line'><span class="s1">     from ～/Library/Application Support/TextMate/Managed/Bundles/Bundle Support.tmbundle/Support/shared/lib/ui.rb:307:in `popen&#39;</span>
</span><span class='line'>      <span class="n">from</span> <span class="err">～</span><span class="o">/</span><span class="no">Library</span><span class="o">/</span><span class="no">Application</span> <span class="no">Support</span><span class="o">/</span><span class="no">TextMate</span><span class="o">/</span><span class="no">Managed</span><span class="o">/</span><span class="no">Bundles</span><span class="o">/</span><span class="no">Bundle</span> <span class="no">Support</span><span class="o">.</span><span class="n">tmbundle</span><span class="o">/</span><span class="no">Support</span><span class="o">/</span><span class="n">shared</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ui</span><span class="o">.</span><span class="n">rb</span><span class="p">:</span><span class="mi">307</span><span class="ss">:in</span> <span class="sb">`initialize&#39;</span>
</span><span class='line'><span class="sb">     from ～/Library/Application Support/TextMate/Managed/Bundles/Bundle Support.tmbundle/Support/shared/lib/ui.rb:20:in `</span><span class="kp">new</span><span class="s1">&#39;</span>
</span><span class='line'><span class="s1">     from ～/Library/Application Support/TextMate/Managed/Bundles/Bundle Support.tmbundle/Support/shared/lib/ui.rb:20:in `dialog&#39;</span>
</span><span class='line'>      <span class="n">from</span> <span class="err">～</span><span class="o">/</span><span class="no">Library</span><span class="o">/</span><span class="no">Application</span> <span class="no">Support</span><span class="o">/</span><span class="no">TextMate</span><span class="o">/</span><span class="no">Managed</span><span class="o">/</span><span class="no">Bundles</span><span class="o">/</span><span class="no">Bundle</span> <span class="no">Support</span><span class="o">.</span><span class="n">tmbundle</span><span class="o">/</span><span class="no">Support</span><span class="o">/</span><span class="n">shared</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">progress</span><span class="o">.</span><span class="n">rb</span><span class="p">:</span><span class="mi">42</span><span class="ss">:in</span> <span class="sb">`call_with_progress&#39;</span>
</span><span class='line'><span class="sb">     from ～/_test_tm.rb:12:in `</span><span class="o">&lt;</span><span class="n">main</span><span class="o">&gt;</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>其中关键是: ui.rb:308: in `to_plist&#8217;: An object in the argument tree could not be converted
如果你的异常是这个那么可以肯定的时候和我的情况一直。下面是我的一个临时解决方案。</p>

<p>这个 bug 的解决有争议，TextMate 社区认为是 Ruby 的 bug，但网络上另一个解决方案认为是 TextMate 的 bug。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> ~/Library/Application Support/TextMate/Managed/Bundles/Bundle Support.tmbundle/Support/shared/lib/osx
</span><span class='line'>git clone git://github.com/kballard/osx-plist.git
</span><span class='line'><span class="nb">cd </span>osx-plist/ext/plist
</span><span class='line'>ruby extconf.rb <span class="o">&amp;&amp;</span> make
</span><span class='line'><span class="nb">cd</span> ../../../
</span><span class='line'>mv plist.bundle plist.bundle.old
</span><span class='line'>cp osx-plist/ext/plist/plist.bundle ./plist.bundle
</span></code></pre></td></tr></table></div></figure>


<p>这样Ctag是可以正常运行的，但是会导致 Git Bundle 报错：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>dyld: lazy symbol binding failed: Symbol not found: _rb_intern2 Referenced from: ～/Library/Application Support/TextMate/Managed/Bundles/Bundle Support.tmbundle/Support/shared/lib/osx/plist.bundle Expected in: flat namespace
</span><span class='line'>dyld: Symbol not found: _rb_intern2 Referenced from: ～/Library/Application Support/TextMate/Managed/Bundles/Bundle Support.tmbundle/Support/shared/lib/osx/plist.bundle Expected in: flat namespace
</span></code></pre></td></tr></table></div></figure>


<p>我的一个临时解决方案是：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> ~/Library/Application Support/TextMate/Managed/Bundles/Bundle Support.tmbundle/Support/shared/lib/osx
</span><span class='line'>git clone git://github.com/kballard/osx-plist.git
</span><span class='line'><span class="nb">cd </span>osx-plist/ext/plist
</span></code></pre></td></tr></table></div></figure>


<p>打开 osx-plist/ext/plist 下的 plist.c 找到：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm"> * Document-class: OSX::PropertyListError</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kt">void</span> <span class="nf">Init_plist</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">mOSX</span> <span class="o">=</span> <span class="n">rb_define_module</span><span class="p">(</span><span class="s">&quot;OSX&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="n">mPlist</span> <span class="o">=</span> <span class="n">rb_define_module_under</span><span class="p">(</span><span class="n">mOSX</span><span class="p">,</span> <span class="s">&quot;PropertyList&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>将 <code>void Init_plist() {</code> 改为 <code>void Init_plist2() {</code> 后执行：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ruby extconf.rb <span class="o">&amp;&amp;</span> make
</span><span class='line'><span class="nb">cd</span> ../../../
</span><span class='line'>mv plist.bundle.old plist.bundle
</span><span class='line'>cp osx-plist/ext/plist/plist.bundle ./plist2.bundle
</span></code></pre></td></tr></table></div></figure>


<p>找到 TM Ctag 的安装目录，我的是： ～/Library/Application Support/Avian/Pristine Copy/Bundles/tm-ctags.tmbundle/Support/bin
修改 tmctags.rb 和 update_ctags.rb
分别在 <code>require ENV['TM_SUPPORT_PATH'] + '/lib/ui.rb'</code> 前增加：</p>

<p><code>require ENV['TM_SUPPORT_PATH'] + '/lib/osx/plist2'</code></p>

<p>这样就可以同时工作了  但是还是会有一个警告消息。</p>

<p>完美的解决方案是修改 原版的 plist.bundle 或者 完善 git://github.com/kballard/osx-plist.git</p>

<p>简单研究了一下 TM2的源码 目前我还不会修改 plist.bundle 所以只能使用这个临时不完美的解决方案。</p>

<p>这个方案的原理是：
先载入新版本的 plist2 ，之后原版的plist就无法加载。但是会有一个警告消息。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Google并不完美，Baidu也并非很烂（日语翻译服务对比）]]></title>
    <link href="http://lester.izstudy.com//blog/2012/09/10/translat-in-google-and-baidu/"/>
    <updated>2012-09-10T21:14:00+08:00</updated>
    <id>http://lester.izstudy.com//blog/2012/09/10/translat-in-google-and-baidu</id>
    <content type="html"><![CDATA[<p>不管你是一个谷歌粉也好，或者是一个只用百度而忽视谷歌存在的中国网民也好，在每个人的心里面对各自喜欢的互联网应用都有一定的偏好。 而人们往往会因为喜欢而忽视一些客观存在的问题。比如：对于谷歌粉来说，往往不容许别人说谷歌的半点不是，他会有一百个理由来解释她的问题。 我就是一个铁杆的谷歌粉，我偏爱谷歌的各种应用，我一直坚定不移的认为谷歌的旗下的各种产品均是近乎完美的。所以不管什么类型的应用只要谷歌有我就会用谷歌的，那么翻译工具这个我也是一直用谷歌的。  由于最近接触日语相关内容比较多，所以经常翻译一些日语内容。后来听说百度翻译也低调上线了，所以就尝试了一下。</p>

<p>那么究竟谁家的翻译服务更好呢？并不着急下结论，请先看下面的例子吧：</p>

<p><strong>案例一:</strong></p>

<table>
<thead>
<tr>
<th></th>
<th align="left"> 翻译工具 </th>
<th align="right"> 文字内容 </th>
<th align="right">得分</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td align="left">日语原文</td>
<td align="right">ちょっと日本語理解できます</td>
<td align="right">|</td>
</tr>
<tr>
<td></td>
<td align="left">谷歌翻译</td>
<td align="right">你能理解一个小日本</td>
<td align="right">2|</td>
</tr>
<tr>
<td></td>
<td align="left">百度翻译</td>
<td align="right">点日语可以理解。</td>
<td align="right">7|</td>
</tr>
<tr>
<td></td>
<td align="left">正确译文</td>
<td align="right">可以理解一些日语。</td>
<td align="right">|</td>
</tr>
</tbody>
</table>


<p><strong>案例二:</strong></p>

<table>
<thead>
<tr>
<th></th>
<th align="left"> 翻译工具 </th>
<th align="right"> 文字内容 </th>
<th align="right">得分</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td align="left">日语原文</td>
<td align="right">こんな食べ方もあるんです。季節を味わう、さんま料理</td>
<td align="right">|</td>
</tr>
<tr>
<td></td>
<td align="left">谷歌翻译</td>
<td align="right">有什么办法吃。享受的季节，刀鱼美食</td>
<td align="right">5|</td>
</tr>
<tr>
<td></td>
<td align="left">百度翻译</td>
<td align="right">这样的吃法也有东西。季节品尝料理，秋刀鱼</td>
<td align="right">6|</td>
</tr>
<tr>
<td></td>
<td align="left">正确译文</td>
<td align="right">也有这样的吃法。平常季节的味道 秋刀鱼料理</td>
<td align="right">|</td>
</tr>
</tbody>
</table>


<p><strong>案例三:</strong></p>

<table>
<thead>
<tr>
<th></th>
<th align="left"> 翻译工具 </th>
<th align="right"> 文字内容 </th>
<th align="right">得分</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td align="left">日语原文</td>
<td align="right">沖縄県・尖閣諸島の国有化に伴い、政府は１１日、外務省の杉山晋輔アジア大洋州局長を北京に派遣するなど、対立先鋭化を避け中国側の理解を得ることに躍起になっている。だが、中国外務省は「必要な措置をとる」と明言しており、公船を尖閣付近の海域に派遣し挑発するなどの対抗措置に出るとみられる。中国公船は日本の海上保安庁の船艇数（１０００トン以上）に迫る勢いで、監視態勢には不安も残る。　「日中の外交当局で緊密な意思疎通を行ってきた」　藤村修官房長官は１１日の記者会見で、尖閣国有化が日中関係に与える影響を抑えるよう両国で調整してきたと強調した。</td>
<td align="right">|</td>
</tr>
<tr>
<td></td>
<td align="left">谷歌翻译</td>
<td align="right">11日，冲绳县的尖阁列岛，发送到北京亚太部主任，外交信介杉山国有化，政府正在全力以赴，只是为了得到中国方面的理解，避免冲突锐化。不过，外交部表示，中国将“采取必要措施，”他来作为对策，派出向尖阁公众船附近海域的挑衅。中国公务船接近的势头，日本海上保安厅的船只在（1000吨以上）的数量，仍然的姿态监视焦虑的。3月11日在新闻发布会上，我们一直强调“通信密切的外交当局的一天，”内阁官房长官小寒藤村进行了调整，以减少在这两个国家的影响国有化尖阁列岛给日本与中国的关系。</td>
<td align="right">4|</td>
</tr>
<tr>
<td></td>
<td align="left">百度翻译</td>
<td align="right"> 冲绳县・钓鱼岛的国有化的发展，政府在11日，外务省的杉山晋輔亚洲大洋州局长北京派遣等，对立避开尖锐化的中国方面的理解，拼命。但是，中国外务省“必要的措施”，明确表示着，公船在尖阁诸岛附近海域派遣挑衅等对抗措施出来的和被看的。中国公船是日本的海上保安厅巡视船数（1000吨以上）迫近的气势，监视态势是不安也残る。“日中外交当局密切沟通进行了”，藤村修官房长官在11日的记者招待会上，钓鱼岛国有化中日关系的影响控制两国调整了强调了。</td>
<td align="right">6|</td>
</tr>
<tr>
<td></td>
<td align="left">正确译文</td>
<td align="right"> 接近百度翻译 </td>
<td align="right">|</td>
</tr>
</tbody>
</table>


<p><strong>案例四:</strong></p>

<table>
<thead>
<tr>
<th></th>
<th align="left"> 翻译工具 </th>
<th align="right"> 文字内容 </th>
<th align="right">得分</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td align="left">日语原文</td>
<td align="right">それではご質問がございましたら、ご連絡ください。</td>
<td align="right">|</td>
</tr>
<tr>
<td></td>
<td align="left">谷歌翻译</td>
<td align="right">如果您有任何疑问，请与我们联系。</td>
<td align="right">9|</td>
</tr>
<tr>
<td></td>
<td align="left">百度翻译</td>
<td align="right">那么您的问题，请再联系。</td>
<td align="right">5|</td>
</tr>
<tr>
<td></td>
<td align="left">正确译文</td>
<td align="right">如果您有任何疑问，请与我们联系。</td>
<td align="right">|</td>
</tr>
</tbody>
</table>


<p><strong>案例五:</strong></p>

<table>
<thead>
<tr>
<th></th>
<th align="left"> 翻译工具 </th>
<th align="right"> 文字内容 </th>
<th align="right">得分</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td align="left">日语原文</td>
<td align="right">実施時期について満足している。</td>
<td align="right">|</td>
</tr>
<tr>
<td></td>
<td align="left">谷歌翻译</td>
<td align="right">关于实施的时间，我很高兴。</td>
<td align="right">9|</td>
</tr>
<tr>
<td></td>
<td align="left">百度翻译</td>
<td align="right">实施时期表示满意的。</td>
<td align="right">5|</td>
</tr>
<tr>
<td></td>
<td align="left">正确译文</td>
<td align="right">关于实施时间,我很满意.</td>
<td align="right">|</td>
</tr>
</tbody>
</table>


<p><strong>案例六:</strong></p>

<table>
<thead>
<tr>
<th></th>
<th align="left"> 翻译工具 </th>
<th align="right"> 文字内容 </th>
<th align="right">得分</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td align="left">日语原文</td>
<td align="right">大連センタースタッフの皆様</td>
<td align="right">|</td>
</tr>
<tr>
<td></td>
<td align="left">谷歌翻译</td>
<td align="right">中心的工作人员每个人都大连</td>
<td align="right">3|</td>
</tr>
<tr>
<td></td>
<td align="left">百度翻译</td>
<td align="right">大连中心工作人员的大家</td>
<td align="right">6|</td>
</tr>
<tr>
<td></td>
<td align="left">正确译文</td>
<td align="right">大连中心的所有工作人员(邮件开头写的)</td>
<td align="right"> |</td>
</tr>
</tbody>
</table>


<p><strong>案例七:</strong></p>

<table>
<thead>
<tr>
<th></th>
<th align="left"> 翻译工具 </th>
<th align="right"> 文字内容 </th>
<th align="right">得分</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td align="left">日语原文</td>
<td align="right">NHNSTオリジナル LINEスタンプ　大連センターへのプレゼントを開始!!</td>
<td align="right">|</td>
</tr>
<tr>
<td></td>
<td align="left">谷歌翻译</td>
<td align="right">启动该中心原大连NHNST时间戳行的礼物！</td>
<td align="right">3|</td>
</tr>
<tr>
<td></td>
<td align="left">百度翻译</td>
<td align="right">NHNST原创LINE邮票大连中心的礼物开始！</td>
<td align="right">4|</td>
</tr>
<tr>
<td></td>
<td align="left">正确译文</td>
<td align="right">NHNST原创的LINE邮票大连中心的礼物开始！</td>
<td align="right"> |</td>
</tr>
</tbody>
</table>


<p><strong>案例八:</strong></p>

<table>
<thead>
<tr>
<th></th>
<th align="left"> 翻译工具 </th>
<th align="right"> 文字内容 </th>
<th align="right">得分</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td align="left">日语原文</td>
<td align="right">簡単に言いますとBOではグロバル変数を使わないでください。</td>
<td align="right">|</td>
</tr>
<tr>
<td></td>
<td align="left">谷歌翻译</td>
<td align="right">请不要使用在简单的变量BO Gurobaru的。</td>
<td align="right">5|</td>
</tr>
<tr>
<td></td>
<td align="left">百度翻译</td>
<td align="right">简单地说BO上全球变量请不要使用。</td>
<td align="right">7|</td>
</tr>
<tr>
<td></td>
<td align="left">正确译文</td>
<td align="right"></td>
<td align="right"> |</td>
</tr>
</tbody>
</table>


<p><strong>案例九:</strong></p>

<table>
<thead>
<tr>
<th></th>
<th align="left"> 翻译工具 </th>
<th align="right"> 文字内容 </th>
<th align="right">得分</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td align="left">日语原文</td>
<td align="right">目標登録は必ず日本語でご記入お願いします。</td>
<td align="right">|</td>
</tr>
<tr>
<td></td>
<td align="left">谷歌翻译</td>
<td align="right">我们的目标是在注册时填写请日本。</td>
<td align="right">5|</td>
</tr>
<tr>
<td></td>
<td align="left">百度翻译</td>
<td align="right">目标登记是一定会用日语填写关照。</td>
<td align="right">7|</td>
</tr>
<tr>
<td></td>
<td align="left">正确译文</td>
<td align="right">目标登记请用日语填写。</td>
<td align="right"> |</td>
</tr>
</tbody>
</table>


<p>通过上面的对比，明眼人一看就知道谁的更好了。 谷歌中日翻译基本上属于入门级，很多翻译出来的内容会有问题。 百度相对于谷歌来说要好不少。 至少理解起来意思不会有什么偏差。</p>

<p>所以这次我还是要赞一下百度的， 百度确实用心做了这个翻译服务。</p>

<p>而谷歌或许是利用偏技术运算的方式进行的日语翻译，但我只能说很遗憾不太准确了。</p>

<p>但谷歌翻译的语音提示做的就很贴心， 也是就贴入一段日语，谷歌下面会给你列出音标，对于我学习就有很大帮助。</p>

<p>所以说谷歌也并非都做的完美， 百度也不至于很烂（百度搜索做的还真就挺烂）。</p>

<p>百度的关键单词更加准确 而谷歌的语句结构好一点</p>

<p>最后人生感悟： 看待事情要客观全面看待，辩证的看待，不要管中窥豹，以偏概全。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[autossh+launchd 实现全自动 ssh -D 端口转发 socks5 代理]]></title>
    <link href="http://lester.izstudy.com//blog/2012/06/29/autossh-launchd-ssh-sock5-proxy-auto-reconection/"/>
    <updated>2012-06-29T21:55:00+08:00</updated>
    <id>http://lester.izstudy.com//blog/2012/06/29/autossh-launchd-ssh-sock5-proxy-auto-reconection</id>
    <content type="html"><![CDATA[<p>用ssh端口转发做为代理 fan qiang 很久了，一直都是手动运行脚本的，我的MBA基本上是不关机的，重来都是用完直接扣下屏幕。
但每次打开之后都需要重新运行一下ssh -D 脚本， 作为一个会写代码的人来说显得还是不够专业。所以我决定要充分发挥我的主观能动性， 让我的电脑更智能。 目前已经可以良好的运行了。</p>

<p>废话少说我直接进入主题。</p>

<p>我的系统是：Mac OS X Lion</p>

<p>首先要介绍几个名词：<br/>
<strong>ssh端口转发：</strong> 是一种利用ssh隧道链接建立的sock5代理。 <br/>
<strong>launchd：</strong> Mac OS X 系统下的用来管理整个系统的 services 和 processes 的工具。如果你需要一个程序开机自动运行，或者由于错误停止后自动重新运行，那么就可以用 launchd 来管理。 <br/>
<strong>autossh：</strong>是用来保持 ssh 一直处于链接状态的工具。可以在链接断开后自动重新链接。</p>

<!--more-->


<p>首先需要设置使用密钥链接 ssh 主机， 这样做的目的是链接主机的时候不用输入密码的环节。<br/>
其次你还需要 Homebrew 或者 MacPorts 用来安装 autossh。<br/>
我是用 Homebrew 安装的，打开终端。</p>

<p>执行如下命令：<br/>
<code>brew install autossh</code><br/>
稍等片刻很快就会完成安装。</p>

<p>终端下输入：<br/>
<code>autossh -M 8118 -nNT -D 8117 root@sshhost.com</code><br/>
注意其中 8117是你最终的socks5端口，root是你链接ssh的账号，sshhost.com是你的ssh主机地址（也可以是ip地址）。将这些内容替换成你可以正常使用的信息。<br/>
-nNT这个几个参数最好保持，另外最好不要增加-f参数，如果增加了launchd就有可能不能进行正确管理。</p>

<p>执行上面命令之后我们要达到的效果是：没有返回结果，并且命令不结束，socks5可用（可以用 SwitchySharp for Chrome测试）。<br/>
这说明autossh ssh -D 已经没有问题。下面我们要做的就是用 launchd 来管理之。<br/>
按 Ctrl + c 退出刚才状态。</p>

<p>接下来要用你习惯的文本编辑器创建下面这个文件：<br/>
~/Library/LaunchAgents/ssh-d.plist
我是用 Sublime Text 2 创建的。</p>

<p>文件的内容如下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>  <span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
</span><span class='line'>  <span class="cp">&lt;!DOCTYPE plist PUBLIC &quot;-//Apple Computer//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;</span>
</span><span class='line'>  <span class="nt">&lt;plist</span> <span class="na">version=</span><span class="s">&quot;1.0&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;dict&gt;</span>
</span><span class='line'>      <span class="nt">&lt;key&gt;</span>Label<span class="nt">&lt;/key&gt;</span>
</span><span class='line'>        <span class="nt">&lt;string&gt;</span>localdomain.localhost.ssh-d<span class="nt">&lt;/string&gt;</span>
</span><span class='line'>      <span class="nt">&lt;key&gt;</span>ProgramArguments<span class="nt">&lt;/key&gt;</span>
</span><span class='line'>        <span class="nt">&lt;array&gt;</span>
</span><span class='line'>          <span class="nt">&lt;string&gt;</span>/usr/local/bin/autossh<span class="nt">&lt;/string&gt;</span>
</span><span class='line'>          <span class="nt">&lt;string&gt;</span>-M<span class="nt">&lt;/string&gt;</span>
</span><span class='line'>          <span class="nt">&lt;string&gt;</span>8118<span class="nt">&lt;/string&gt;</span>
</span><span class='line'>          <span class="nt">&lt;string&gt;</span>-nNT<span class="nt">&lt;/string&gt;</span>
</span><span class='line'>          <span class="nt">&lt;string&gt;</span>-D<span class="nt">&lt;/string&gt;</span>
</span><span class='line'>          <span class="nt">&lt;string&gt;</span>8117<span class="nt">&lt;/string&gt;</span>
</span><span class='line'>          <span class="nt">&lt;string&gt;</span>root@sshhost.com<span class="nt">&lt;/string&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/array&gt;</span>
</span><span class='line'>      <span class="nt">&lt;key&gt;</span>KeepAlive<span class="nt">&lt;/key&gt;</span>
</span><span class='line'>        <span class="nt">&lt;true/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;key&gt;</span>RunAtLoad<span class="nt">&lt;/key&gt;</span>
</span><span class='line'>        <span class="nt">&lt;true/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;key&gt;</span>StandardOutPath<span class="nt">&lt;/key&gt;</span>
</span><span class='line'>        <span class="nt">&lt;string&gt;</span>/var/log/ssh-d-out.log<span class="nt">&lt;/string&gt;</span>
</span><span class='line'>      <span class="nt">&lt;key&gt;</span>StandardErrorPath<span class="nt">&lt;/key&gt;</span>
</span><span class='line'>        <span class="nt">&lt;string&gt;</span>/var/log/ssh-d-err.log<span class="nt">&lt;/string&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/dict&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/plist&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>打开终端执行命令： <br/>
<code>launchctl load ~/Library/LaunchAgents/ssh-d.plist</code></p>

<p>然后检查 socks 代理是否可以使用。
如果不可以使用，打开 Mac 系统的控制台程序，查看日志有无相关错误。</p>

<p>到目前为止，以后我们就可以很轻松的使用代理了，而且不用操心代理是否链接的问题，系统会自动去帮你检查。</p>

<p>可以使用下面命令查看你的ssh进程情况：<br/>
<code>ps -auxww |grep 8117</code></p>

<p>下面命令是用来去掉launchd进行管理的：<br/>
<code>launchctl unload ~/Library/LaunchAgents/ssh-d.plist</code></p>

<p>参考文章：<br/>
<a href="http://dipplum.com/2010/09/12/launchd-plist-for-ssh-d/">自动连接ssh -D的launchd配置</a><br/>
<a href="http://blog.hebine.com/archives/1621.html">Mac下开机自动连接ssh -D</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[test the first blog post with octopress]]></title>
    <link href="http://lester.izstudy.com//blog/2012/03/05/test-the-first-blog-post-with-octopress/"/>
    <updated>2012-03-05T00:11:00+08:00</updated>
    <id>http://lester.izstudy.com//blog/2012/03/05/test-the-first-blog-post-with-octopress</id>
    <content type="html"><![CDATA[<p>Hello World！
世界你好， 我又要重新开始写Blog了。</p>
]]></content>
  </entry>
  
</feed>
